# 맨마지막 원판이 이동해야하는 방향을 기준으로 역순으로 재귀를 생각해본다.
# n번째 원반은 항상 출발지에서 비어있는 목적지로 이동해야만 한다.
# "그 외에 원반들이 모두 출발지도 목적지도 아닌 다른 곳에 이미 있어야한다".
# 그렇다면 이 또한 n번째 원반을 고려하지 않고 그 외에 나머지 원반들을 모두 출발지와 도착지가 아닌 다른 곳에 모두 이동시키는 것과 같다.
# 그 후에 n번째 원반을 목적지로 옮기고 "나머지 원반들을 다시 목적지로 옮긴다".
# 이 과정 또한 n-1번째 원반은 항상 n-2번째 원반들이 모두 출발지로 이동한 뒤에 n번째 원반만 있는 (비어있다고 생각해도 된다.) 목적지로 옮겨야 하는 것이다.

def solution(n):
    
    def move(n, frm, to, another) :
        if n == 1 :
            answer.append([frm, to])
            return
        
        else :
            move(n-1, frm, another, to)    # n-1번째까지 나머지 원반들은 모두 목적지가 아닌 다른 곳으로 이동해있어야 한다.
            answer.append([frm, to])       # n번째 원반은 출발지에서 목적지로 무조건 1회 이동.
            move(n-1, another, to, frm)    # 그 후에 다시 n-1번째까지의 나머지 원반을 다시 목적지로 모두 이동.
    
    answer = []
    move(n, 1, 3, 2)
    return answer